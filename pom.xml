<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.monokkel</groupId>
    <artifactId>springangular</artifactId>
    <version>1.1-SNAPSHOT</version>
    <packaging>war</packaging>

    <properties>

        <!-- Generic properties -->
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Spring -->
        <springframework.version>3.2.3.RELEASE</springframework.version>

        <!-- Jackson -->
        <jackson-databind.version>2.3.1</jackson-databind.version>

        <!-- Servlet -->
        <servlet-api.version>3.0.1</servlet-api.version>

        <!-- Logging -->
        <logback.version>1.0.13</logback.version>
        <slf4j.version>1.7.5</slf4j.version>

        <!-- Test -->
        <junit.version>4.11</junit.version>

    </properties>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>2.5</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>src/main/webapp/dist</directory>
                        </fileset>
                        <fileset>
                            <directory>.tmp</directory>
                        </fileset>
                        <!--<fileset>-->
                            <!--<directory>node_modules</directory>-->
                        <!--</fileset>-->
                    </filesets>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <warSourceDirectory>${project.basedir}/src/main/webapp/dist</warSourceDirectory>
                    <!--Alternatively use webResources:-->
                    <!--<webResources>-->
                    <!--<resource>-->
                    <!--<directory>${project.basedir}/src/main/webapp/dist</directory>-->
                    <!--</resource>-->
                    <!--</webResources>-->
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>9.2.0.v20140526</version>
                <configuration>
                    <webAppSourceDirectory>${project.basedir}/src/main/webapp/dist</webAppSourceDirectory>
                    <webApp>
                        <contextPath>/beer</contextPath>
                    </webApp>
                    <!--<webAppConfig>-->
                    <!--<contextPath>/produkt</contextPath>-->
                    <!--<baseResource implementation="org.eclipse.jetty.util.resource.ResourceCollection">-->
                    <!--<resourcesAsCSV>src/main/webapp/dist</resourcesAsCSV>-->
                    <!--</baseResource>-->
                    <!--</webAppConfig>-->
                    <httpConnector>
                        <port>8053</port>
                        <idleTimeout>60000</idleTimeout>
                    </httpConnector>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>0.0.16</version>
                <executions>
                    <execution>
                        <id>install node and npm</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                        <configuration>
                            <nodeVersion>v0.10.30</nodeVersion>
                            <npmVersion>2.1.4</npmVersion>
                        </configuration>
                    </execution>
                    <execution>
                        <id>npm install</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <!-- Optional configuration which provides for running any npm command -->
                        <configuration>
                            <arguments>install</arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>grunt build</id>
                        <goals>
                            <goal>grunt</goal>
                        </goals>
                        <configuration>
                            <arguments>--force</arguments>
                        </configuration>
                    </execution>
                    <!--<execution>-->
                        <!--<id>javascript tests</id>-->
                        <!--<goals>-->
                            <!--<goal>karma</goal>-->
                        <!--</goals>-->
                        <!--<configuration>-->
                            <!--<karmaConfPath>src/test/javascript/karma.conf.ci.js</karmaConfPath>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>

        <!-- Servlet -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${servlet-api.version}</version>
            <scope>provided</scope>
        </dependency>


        <!-- Spring and Transactions -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${springframework.version}</version>
            <exclusions>
                <!-- Exclude Commons Logging in favor of SLF4j -->
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${springframework.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${springframework.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson-databind.version}</version>
        </dependency>


        <!--Other dependencies we clearly need but will not focus on in this talk-->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${springframework.version}</version>
            <scope>test</scope>
        </dependency>


        <!-- Logging with SLF4J & LogBack -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
            <scope>runtime</scope>
        </dependency>


    </dependencies>



</project>